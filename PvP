const canvas = document.getElementById('gameCanvas');
const ctx = canvas.getContext('2d');
        
// Размер клетки на игровом поле
const cellSize = 100;
        
// Создание пустого игрового поля 3х3
const gameBoard = [
    ['', '', ''],
    ['', '', ''],
    ['', '', '']];
        
// Отслеживание текущего игрока (крестик или нолик)
let currentPlayer = 'X';
    
// Отслеживание состояния игры (незавершена или завершена)
let gameEnded = false;
        
// Отрисовка игрового поля
function drawBoard() {
    ctx.clearRect(0, 0, canvas.width, canvas.height);
            
    for (let row = 0; row < 3; row++) {
        for (let col = 0; col < 3; col++) {
            const cellX = col * cellSize;
            const cellY = row * cellSize;
                    
            ctx.strokeStyle = "gray";
            ctx.lineWidth = 2;
            ctx.strokeRect(cellX, cellY, cellSize, cellSize);
                    
            const cellValue = gameBoard[row][col];
            if (cellValue !== '') {
                ctx.font = "48px Arial";
                ctx.textAlign = "center";
                ctx.textBaseline = "middle";
                ctx.fillText(cellValue, cellX + cellSize / 2, cellY + cellSize / 2);
            }
        }
    }
}
        
// Обработка клика на игровом поле
function handleCellClick(event) {
    if (gameEnded) return;
            
    const rect = canvas.getBoundingClientRect();
    const mouseX = event.clientX - rect.left;
    const mouseY = event.clientY - rect.top;
            
    const clickedRow = Math.floor(mouseY / cellSize);
    const clickedCol = Math.floor(mouseX / cellSize);
            
    if (gameBoard[clickedRow][clickedCol] === '') {
        gameBoard[clickedRow][clickedCol] = currentPlayer;
        drawBoard();
                
        if (checkWinner()) {
            alert('Игрок ' + currentPlayer + ' победил!');
            gameEnded = true;
            } 
        else if (checkTie()) {
            alert('Ничья!');
            gameEnded = true;
            } 
        else {
            currentPlayer = (currentPlayer === 'X') ? 'O' : 'X';
            }
    }
}
        
// Проверка наличия победителя
function checkWinner() {
    // Проверка по горизонтали
    for (let row = 0; row < 3; row++) {
        if (gameBoard[row][0] !== '' && 
            gameBoard[row][0] === gameBoard[row][1] && 
            gameBoard[row][1] === gameBoard[row][2]) {
            return true;
        }
    }
            
    // Проверка по вертикали
    for (let col = 0; col < 3; col++) {
        if (gameBoard[0][col] !== '' && 
            gameBoard[0][col] === gameBoard[1][col] && 
            gameBoard[1][col] === gameBoard[2][col]) {
            return true;
        }
    }
            
    // Проверка по диагонали (слева направо)
    if (gameBoard[0][0] !== '' && 
        gameBoard[0][0] === gameBoard[1][1] && 
        gameBoard[1][1] === gameBoard[2][2]) {
        return true;
    }
            
    // Проверка по диагонали (справа налево)
    if (gameBoard[0][2] !== '' && 
        gameBoard[0][2] === gameBoard[1][1] && 
        gameBoard[1][1] === gameBoard[2][0]) {
        return true;
    }
            
    return false;
}
        
// Проверка на ничью
function checkTie() {
    for (let row = 0; row < 3; row++) {
        for (let col = 0; col < 3; col++) {
            if (gameBoard[row][col] === '') {
                return false;
            }
        }
    }
            
    return true;
}
        
// Добавление обработчика клика на игровое поле
canvas.addEventListener('click', handleCellClick);
        
// Инициализация отрисовки игрового поля
drawBoard();
